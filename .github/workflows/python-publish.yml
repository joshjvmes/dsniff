name: Build, Test & Release

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: 1
      DSNIFF_DB_PATH: dummy=no-bdb
      ac_cv_header_pcap_bpf_h: no
      ac_cv_header_pcap_nopacketinfo_h: yes
      ac_cv_header_pcap_linux_types_h: no

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            autoconf \
            automake \
            libtool \
            libpcap-dev \
            libnet-dev \
            libnids-dev \
            libssl-dev \
            bison \
            flex

      - name: Generate install-sh using autoreconf
        run: |
          cd dsniff-old
          autoreconf -i
          chmod +x install-sh
          cd ..

      - name: Patch configure to skip broken pcap-bpf.h checks
        run: |
          cd dsniff-old
          sed -i 's/test "$HAVE_PCAP_BPF_H"/test "no"/' configure
          sed -i 's/return pcap-bpf.h//' configure
          sed -i 's/exit pcap-bpf.h//' configure
          cd ..

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build distribution
        run: python -m build --sdist --wheel

      - name: Verify installation
        run: |
          pip install dist/*.whl
          pip list | grep dsniff

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload --skip-existing dist/*